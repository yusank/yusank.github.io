<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Yusank`s Site</title><link>https://yusank.github.io/posts/</link><description>所有文章 | Yusank`s Site</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yusankuban@gmail.com (Yusank)</managingEditor><webMaster>yusankuban@gmail.com (Yusank)</webMaster><lastBuildDate>Mon, 22 Nov 2021 10:50:00 +0800</lastBuildDate><atom:link href="https://yusank.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>[系列]Redis Server 实现·前言</title><link>https://yusank.github.io/posts/redeis-server-introduction/</link><pubDate>Mon, 22 Nov 2021 10:50:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/redeis-server-introduction/</guid><description>本文系列篇Redis Server 实现的开篇文章，将列出本系列篇讲述的内容和实现的功能做简单</description></item><item><title>haproxy 开发 lua 插件过程遇到的坑</title><link>https://yusank.github.io/posts/haproxy_lua_trouble/</link><pubDate>Wed, 03 Nov 2021 13:20:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/haproxy_lua_trouble/</guid><description>总结在开发和调试以及压测 lua 插件 功能过程中遇到的坑 该插件实现在 haproxy 中简单的蓝绿标记请</description></item><item><title>apisix 开发自定义插件</title><link>https://yusank.github.io/posts/apisix_plugins/</link><pubDate>Wed, 03 Nov 2021 12:20:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/apisix_plugins/</guid><description>分享如何在 docker 环境部署 apisix 和如何开发 lua 和 go 语言的插件以及如何使用这些自定义插件的过程</description></item><item><title>nginx 中使用 lua 动态加载服务配置</title><link>https://yusank.github.io/posts/nginx-lua-plugins/</link><pubDate>Fri, 17 Sep 2021 12:22:33 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/nginx-lua-plugins/</guid><description>本文简单介绍如何通过 lua 脚本和 ngx_shared_dict 在 nginx 中动态加载后端服务配置以及动态更新服务配置. nginx</description></item><item><title>部署单机 k8s 集群</title><link>https://yusank.github.io/posts/deploy-k8s-cluster/</link><pubDate>Tue, 07 Sep 2021 12:22:33 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/deploy-k8s-cluster/</guid><description>本文介绍本地或服务器上搭建单节点的 k8s 集群和 webUI 以及启用ingress，可以用作开发</description></item><item><title>如何在 docker 环境下进行远程 dlv 调试</title><link>https://yusank.github.io/posts/docker-dlv-debugging/</link><pubDate>Mon, 06 Sep 2021 14:02:03 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/docker-dlv-debugging/</guid><description>dlv 作为程序调试工具功能非常强大，日常开发和测试中几乎离不开 debug 调试。但是有的时候由</description></item><item><title>如何自定义 protoc 插件</title><link>https://yusank.github.io/posts/go-protoc-http/</link><pubDate>Thu, 08 Jul 2021 18:22:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/go-protoc-http/</guid><description>前言 如果大家接触过 grpc 和 protobuf ，那对 protoc 这个命令应该不陌生。 protoc 为基于 proto buffer 文件生成不同语言</description></item><item><title>如何编写自己的第一个命令行工具</title><link>https://yusank.github.io/posts/go-cobra/</link><pubDate>Wed, 30 Jun 2021 18:22:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/go-cobra/</guid><description>关于如何用 go 语言编写一个命令行工具。这里会基于 cobra 开源库进行开发。cobra 作为一</description></item><item><title>Go-Micro 中使用Nacos</title><link>https://yusank.github.io/posts/use-nacos-with-go-micro/</link><pubDate>Wed, 23 Jun 2021 18:22:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/use-nacos-with-go-micro/</guid><description>go-micro 作为比较流行的微服务框架，其良好的接口设计为后期扩展使用带来了非常好的便利性。</description></item><item><title>Go-Micro 的架构及其使用（一）</title><link>https://yusank.github.io/posts/go-micro-1/</link><pubDate>Fri, 11 Jun 2021 18:22:00 +0800</pubDate><author>作者</author><guid>https://yusank.github.io/posts/go-micro-1/</guid><description>关于如何使用go的微服务框架 go-micro/v3 的使用和其插件的自定义。第一部分将框架的架构大致了</description></item></channel></rss>